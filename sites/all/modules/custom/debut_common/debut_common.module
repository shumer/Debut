<?php
/**
 * @file
 * Module logic and API.
 */
define('DEBUT_COMMON_MENU_ADMIN', 'admin/config/development/debut_config');
define('DEBUT_COMMON_PERM_ADMIN', 'Administer Debut');
define('DEBUT_COMMON_PERM_CM', 'Act as Content Manager');
define('DEBUT_COMMON_PERM_ADMIN_LINKS', 'DEBUT: see admin links');

// Define search url.
define('DEBUT_COMMON_PATH_SEARCH', variable_get('DEBUT_COMMON_PATH_SEARCH', 'search'));

// Define CT names.
define('DEBUT_COMMON_TYPE_NEWS', 'news');
define('DEBUT_COMMON_TYPE_PRESS', 'press_about_debut');
define('DEBUT_COMMON_TYPE_DOCUMENTS', 'documents');
define('DEBUT_COMMON_TYPE_PERSONS', 'debut_prize_person');
define('DEBUT_COMMON_TYPE_JURY', 'debut_jury');
define('DEBUT_COMMON_TYPE_BOOKS', 'books');
define('DEBUT_COMMON_TYPE_PHOTOS', 'photo_listing');
define('DEBUT_COMMON_TYPE_VIDEO', 'video');
define('DEBUT_COMMON_TYPE_IBOOKS', 'ibooks');
define('DEBUT_COMMON_TYPE_MASTER_CLASS_SECTION', 'master_class_section');
define('DEBUT_COMMON_TYPE_MASTER_CLASS_TEXT', 'master_class_text');
define('DEBUT_COMMON_TYPE_INTERVIEW', 'interview');
define('DEBUT_COMMON_TYPE_TRAVELS', 'travel');
define('DEBUT_COMMON_TYPE_TRAVEL_DESCRIPTION', 'travel_description');

// Define site pages.
define('DEBUT_COMMON_PAGE_PRIZE_PERSONS', 'prize_persons');
define('DEBUT_COMMON_PAGE_ALPHABET_PERSONS', 'alphabet_persons');
define('DEBUT_COMMON_PAGE_PRIZE_JURY', 'prize_jury');
define('DEBUT_COMMON_PAGE_ALPHABET_JURY', 'alphabet_jury');
define('DEBUT_COMMON_PAGE_PRESS_ABOUT_DEBUT', 'press_list');
define('DEBUT_COMMON_PAGE_NEWS_LIST', 'news_list');
define('DEBUT_COMMON_PAGE_DOCUMENTS_LIST', 'documents_list');
define('DEBUT_COMMON_PAGE_BOOKS_LIST', 'books');
define('DEBUT_COMMON_PAGE_IBOOKS_LIST', 'ikniga');
define('DEBUT_COMMON_PAGE_PHOTO_LIST', 'photo_listing');
define('DEBUT_COMMON_PAGE_TRAVELS_LIST', 'travels');
define('DEBUT_COMMON_PAGE_TRAVEL_DESCRIPTION_LIST', 'travels');
define('DEBUT_COMMON_PAGE_VIDEO', 'video_list');
define('DEBUT_COMMON_PAGE_MASTER_CLASS_SECTION_LIST', 'master_class');

// Define views name.
define('DEBUT_COMMON_VIEW_NEWS_LISTING', 'debut_view_list_news');
define('DEBUT_COMMON_VIEW_TRAVELS_LISTING', 'debut_view_list_travels');
define('DEBUT_COMMON_VIEW_DOCUMENTS_LISTING', 'debut_view_list_documents');
define('DEBUT_COMMON_VIEW_PRESS_ABOUT_DEBUT_LISTING', 'debut_view_list_press_about_debut');

// Load includes.
module_load_include('inc', 'debut_common');
module_load_include('form.inc', 'debut_common');

/**
 * Implements hook_ctools_plugin_directory().
 */
function debut_common_ctools_plugin_directory($module, $plugin) {
  if ($module == 'panels' || $module == 'ctools' || $module == 'entityreference') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_menu().
 */
function debut_common_menu() {
  $menu[DEBUT_COMMON_MENU_ADMIN] = array(
    'title' => 'Debut',
    'description' => 'Debut Configuration',
    'access arguments' => array(DEBUT_COMMON_PERM_ADMIN),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('debut_common_form_conf'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'debut_common.admin.inc'
  );

  return $menu;
}

/**
 * Implements hook_permission().
 */
function debut_common_permission() {
  $permissions = array();

  $permissions[DEBUT_COMMON_PERM_ADMIN] = array(
    'title' => t('Administer Debut'),
    'description' => t('Perform administration tasks for Debut.'),
  );

  $permissions[DEBUT_COMMON_PERM_CM] = array(
    'title' => t('Administer Debut content'),
    'description' => t('Perform administration of content for Debut.'),
  );

  $permissions[DEBUT_COMMON_PERM_ADMIN_LINKS] = array(
    'title' => t('Access to admin links'),
    'description' => t('Enable to see admin links'),
  );

  return $permissions;
}

/**
 * Implements hook_init().
 */
function debut_common_init() {

  // Force front end to have ajax libs.
  drupal_add_library('system', 'drupal.ajax');
}

/**
 * Implements hook_node_presave().
 */
function debut_node_presave($node) {

  $supported_types = array(
    DEBUT_COMMON_TYPE_NEWS,
    DEBUT_COMMON_TYPE_DOCUMENTS,
  );

  if (!in_array($node->type, $supported_types)) {
    return;
  }

  // Clear cahce for year list data.
  $cache_var = variable_get('debut_common_cache_data', array());
  foreach ($cache_var as $item) {
    cache_clear_all($item, 'cache');
  }
  variable_del('debut_common_cache_data');
}

/**
 * Implements hook_field_widget_form_alter().
 */
function debut_common_field_widget_form_alter(&$element, &$form_state, $context) {

  // If this is an image field type.
  if ($context['field']['type'] == 'image') {

    // Loop through the element children (there will always be at least one).
    foreach (element_children($element) as $key => $child) {

      // Add the new process function to the element.
      $element[$key]['#process'][] = 'debut_common_image_field_widget_process';
    }
  }
}
